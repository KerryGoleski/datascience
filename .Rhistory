a <- available.packages()
head(rownames(a), 3)
instal.packages ("slidify")
install.packages ("slidify")
install.packages ("ggplot2")
library(ggplot2)
install.packages(magrittr)
install.packages("magrittr)
install.packages("magrittr")
install.packages("rvest")
html():
library(rvest)
library(rvest)
lego_movie <-html("http://imdb.com/title/tt1490017/")
lego_movie <-read_html("http://imdb.com/title/tt1490017/")
lego_movie %>%
html_node("strong span") %>%
html_text() %>%
as.numeric()
getwd
setwd("/users/esundrup/desktop"")
setwd("~/data_science")
mydata = read.csv("Test_URL.csv")
nrow(mydata)
install.packages("KernSmooth")
package_version("KernSmooth")
library(KernSmooth)
scrap <-readhtml("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
library(rvest)
scrap <-readhtml("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
scrap <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
scrap %>%
html_node("//meta[@property='og:title']") %>%
html_attr(content)
scrap %>%
+ html_node(xpath = "meta[@property='og:title']") %>%
+ html_attr(content)
scrap <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
scrap %>%
+ html_node(xpath = "meta[@property='og:title']") %>%
+ html_attr(content)
scrap %>%
+ html_node(xpath = "//meta[@property='og:title']") %>%
+ html_attr(content)
scrap %>%
+ html_node(xpath="//meta[@property='og:title']") %>%
+ html_attr(content)
scrap <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
html_node(xpath="//meta[@property='og:title']") %>%+ html_attr(content)
scrap <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
html_node(xpath="//meta[@property='og:title']") %>%
html_attr("content")
print scrap
scrap
scrap <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
+ html_node(xpath="//meta[@property='article:published_time']") %>%
+ html_attr("content")
scrap <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
+ html_node(xpath="//meta[@property='og:title']") %>%
+ html_attr("content")
scrap_2 <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
+ html_node(xpath="//meta[@property='og:title']") %>%
+ html_attr("content")
scrap_2 <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
+ html_node(xpath="//meta[@property='og:title']") %>%
+ html_attr("content")
scrap2 <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
html_node(xpath="//meta[@property='article:published_time']") %>%
html_attr("content")
scrap_2 <-read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton") %>%
+ html_node(xpath="//meta[@property='og:title']") %>%
+ html_attr("content")
clear
f <- function(x,) {}
page_code <- read_html("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
html_node(page_code)
html_node(page_code, xpath = "//meta[@property='og:title']")
meta_tag <- html_node(page_code, xpath = "//meta[@property='og:title']")
html_attr(meta_tag, "content")
get_meta_content <- function(x){
page_code <- read_html(x)
meta_tag <- html_node(page_code, xpath = "//meta[@property='og:title']")
result <- html_attr(meta_tag, "content")
}
get_meta_content(http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton)
get_meta_content("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
View(get_meta_content)
fix(get_meta_content)
get_meta_content("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
apply(mydata, 1, get_meta_content, output=outputfile)
mydata$Title apply(mydata, 1, get_meta_content)
mydata$Title <- apply(mydata, 1, get_meta_content)
touch outputfile
mydata$time <- mapply(get_meta_content, URL_full)
mydata$time <- mapply(get_meta_content, mydata$URL_full)
mydata
apply(mydata, 1, get_meta_content)
apply(mydata, 1, get_meta_content)
apply(mydata[,c("URL_full")], 1, get_meta_content)
View(get_meta_content)
View(get_meta_content)
fix(get_meta_content)
apply(mydata[,c("URL_full")], 1, get_meta_content)
get_meta_content("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
fix(get_meta_content)
get_meta_content("http://americamagazine.org/content/dispatches/pew-reports-catholics-gravitating-toward-clinton")
apply(mydata[,c("URL_full")], 1, get_meta_content)
install.packages(dplyr)
install.packages("dplyr")
dplyr
library(dplyr)
View(mydata)
View(mydata)
mydata$Meta <- 0
mydata[[1,11]] <- "string of text"
test_var <- get_meta_content(http://www.americamagazine.org/content/dispatches/pope-francis-condemns-blind-violence-killed-84-france) %<%
test_var <- get_meta_content(http://www.americamagazine.org/content/dispatches/pope-francis-condemns-blind-violence-killed-84-france)
test_var <- get_meta_content("http://www.americamagazine.org/content/dispatches/pope-francis-condemns-blind-violence-killed-84-france") %>%
mydata[[1,11]] <- test_var
test_var <- get_meta_content("http://www.americamagazine.org/content/dispatches/pope-francis-condemns-blind-violence-killed-84-france")
mydata[[1,11]] <- test_var
url <- mydata[[2,2]]
url
url <- mydata[[2,6]]
url
url <- mydata[[2,9]]
url
fix(get_meta_content)
get_meta_content(mydata[[3,2]])
url <- mydata [[3,2]]
get_meta_content(url)
as.character(url)
get_meta_content(url)
url <- as.character(mydata[[3,2]])
get_meta_content(url)
mydata[[3,11]] <-as.character(get_meta_content(url))
loop_count <- 1
mydata[[loop_count,11]] <-as.character(get_meta_content(url))
nrow(mydata)
loop_start <- 1
loop_stop <- nrow(mydata)
loop_stop <- as.integer(nrow(mydata))
loop_stop <- as.integer(nrow(mydata))
loop_stop
fix(get_meta_content())
fix(get_meta_content)
#set up initial variable
loop_start <-1
loop_stop <-as.integer(nrow(mydata))
#Sets the xpath you want to use for the meta data
xpath <- "//meta[@property='og:title"
#Here comes the loop
View(mydata)
get_meta_content(as.character(mydata[[6,2]]))
fix(get_meta_content)
get_meta_content(as.character(mydata[[6,2]]))
xpath
xpath <- as.character("//meta[@property='og:title"
)
xpath <- as.character("//meta[@property='og:title")
get_meta_content(as.character(mydata[[6,2]]))
fix(get_meta_content())
fix(get_meta_content)
get_meta_content(as.character(mydata[[6,2]]))
get_meta_content((mydata[[6,2]]))
View(get_meta_content)
View(get_meta_content)
fix(get_meta_content)
get_meta_content((mydata[[6,2]]))
get_meta_content(as.character(mydata[[6,2]]))
result_content <- as.character(get_meta_content(as.character(mydata[[6,2]])))
mydata[[loop_count,11]] <- result_content
result_content <- as.character(get_meta_content(as.character(mydata[[loop_count,2]])))
loop_start <- +1
loop_start
loop_start <- + 1
loop_start <- loop_start + 1
loop_start <- loop_start + 1
help("Sys.sleep")
#set up initial variable
loop_start <-1
loop_stop <-as.integer(nrow(mydata))
#Sets the xpath you want to use for the meta data
xpath <- "//meta[@property='og:title']"
#Here comes the loop
for (i in loop_start:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_count,2]])))
mydata[[loop_count,11]] <- result_content
loop_start <- loop_start +1
Sys.sleep(.5)
}
print "Done Scraping"
View(mydata)
View(mydata)
View(mydata)
View(mydata)
View(mydata)
#set up initial variable
loop_start <-1
loop_stop <-as.integer(nrow(mydata))
#Sets the xpath you want to use for the meta data
xpath <- "//meta[@property='og:title']"
#Here comes the loop
for (i in 1:20){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
loop_start <- loop_start +1
Sys.sleep(.5)
}
print "Done Scraping"
View(mydata)
print done Scraping
print 'done Scraping'
print(Hello World)
print("Hello World")
fix (get_meta_content)
xpath <- as.character("//meta[@property='og:title']")
get_meta_content(url)
#set up initial variables, gets number of rows
loop_start <-1
loop_stop <-as.integer(nrow(mydata))
#The function get_meta_content uses the variable xpath
xpath <- as.character("//meta[@property='og:title']")
#Here comes the loop
#for each row the url will get pulled an the resulting meta contetn will be added to column 11
for (i in loop_start:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
loop_start <- loop_start +1
Sys.sleep(.5)
}
#Don't Tell Mom the Babysitter is Dead
print("The Dishes are done man")
View(mydata)
#set up initial variables, gets number of rows
loop_start <-1
loop_stop <-as.integer(nrow(mydata))
#The function get_meta_content uses the variable xpath
xpath <- as.character("//meta[@property='og:title']")
#Here comes the loop
#for each row the url will get pulled an the resulting meta contetn will be added to column 11
for (i in loop_start:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
loop_start <- loop_start +1
Sys.sleep(1)
}
#Don't Tell Mom the Babysitter is Dead
print("The Dishes are done man")
#set up initial variables, gets number of rows
loop_start <-1
loop_stop <-as.integer(nrow(mydata))
#The function get_meta_content uses the variable xpath
xpath <- as.character("//meta[@property='og:title']")
#Here comes the loop
#for each row the url will get pulled an the resulting meta contetn will be added to column 11
for (i in loop_start:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
loop_count <- loop_count +1
Sys.sleep(3)
}
#Don't Tell Mom the Babysitter is Dead
print("The Dishes are done man")
print("The Dishes are done man" "Finished up to row: " loop_count)
print( "The Dishes are done man. I finished up to row: " loop_count )
cat("Current working dir: ", wd)
cat("Current working dir: ", loop_count)
cat("The Dishes are done man. I finished up to row:", loop_count)
#set up initial variables, gets number of rows
loop_start <-1
loop_count <-1
loop_stop <-as.integer(nrow(mydata))
#The function get_meta_content uses the variable xpath
xpath <- as.character("//meta[@property='og:title']")
#Here comes the loop
#for each row the url will get pulled an the resulting meta contetn will be added to column 11
for (i in 1:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
loop_start <- loop_start +1
loop_count <- loop_count +1
Sys.sleep(3)
}
#Don't Tell Mom the Babysitter is Dead
cat("The Dishes are done man. I finished up to row:", loop_count)
View(mydata)
mydata[[74,2]]
for (i in 74:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
loop_start <- loop_start +1
loop_count <- loop_count +1
Sys.sleep(3)
}
loop_start <- loop_start +1
loop_count <- loop_count +1
for (i in 74:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
loop_start <- loop_start +1
loop_count <- loop_count +1
Sys.sleep(3)
}
View(mydata)
mydata[[73,2]]
loop_count <-73
loop_start <-73
tryCatch()
tryCatch(
{
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,11]] <- result_content
},
error=function(cond){
message(paste("URL has and issue")
message(cond)
mydata[[loop_start,2]] <- as.character("ERROR")
},
warning=function(cond) {
message(paste("URL caused a warning:", url))
message("Here's the original warning message:")
message(cond)
mydata[[loop_start,2]] <- as.character("ERROR"
},
finally={
# NOTE:
# Here goes everything that should be executed at the end,
# regardless of success or error.
# If you want more than one expression to be executed, then you
# need to wrap them in curly brackets ({...}); otherwise you could
# just have written 'finally=<expression>'
loop_start <- loop_start +1
loop_count <- loop_count +1
Sys.sleep(1)
}
)
new_column <- as.integer(11)
new_column <- 11
#set up initial variables, gets number of rows
loop_start <-1 #Which row to start on
loop_count <-1 #Not using anymore
loop_stop <-as.integer(nrow(mydata))
#The function get_meta_content uses the variable xpath
xpath <- as.character("//meta[@property='article:published_time']")
#Set the column for the new data
new_column <- 12
#Here comes the loop
#for each row the url will get pulled an the resulting meta contetn will be added to column 11
for (i in loop_start:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,new_column]] <- result_content
loop_start <- loop_start +1
loop_count <- loop_count +1
Sys.sleep(1)
}
#Don't Tell Mom the Babysitter is Dead
cat("The Dishes are done man. I finished up to row:", loop_start)
#Eventually I need to add an if else error to skip 403 etc
mydata$pub_time <-0
#set up initial variables, gets number of rows
loop_start <-1 #Which row to start on
loop_count <-1 #Not using anymore
loop_stop <-as.integer(nrow(mydata))
#The function get_meta_content uses the variable xpath
xpath <- as.character("//meta[@property='article:published_time']")
#Set the column for the new data
new_column <- 12
#Here comes the loop
#for each row the url will get pulled an the resulting meta contetn will be added to column 11
for (i in loop_start:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,new_column]] <- result_content
loop_start <- loop_start +1
loop_count <- loop_count +1
Sys.sleep(1)
}
#Don't Tell Mom the Babysitter is Dead
cat("The Dishes are done man. I finished up to row:", loop_start)
#Eventually I need to add an if else error to skip 403 etc
loop_count <- 74
loop_start <- 74
for (i in 74:loop_stop){
result_content <- as.character(get_meta_content(as.character(mydata[[loop_start,2]])))
mydata[[loop_start,new_column]] <- result_content
loop_start <- loop_start +1
loop_count <- loop_count +1
Sys.sleep(1)
}
write.table(mydata, "meta_tags.csv", sep = ",")
save.image("~/data_science/1st Web Scrape Project.RData")
